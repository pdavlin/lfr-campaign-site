.title {
  font-size: 2.5rem;
  letter-spacing: 1.25px;
  margin-bottom: var(--space_m);
  text-transform: uppercase;
}

.breakout {
  --gutter-max: calc(1rem + 15vw);
  --gap: var(--space_m);
  --content: min(var(--page-max), 100% - var(--gap) * 2);
  /* --content: 1fr; */
  --gutter: minmax(var(--gap), var(--gutter-max));
  --popout: minmax(0px, 1rem);
  grid-template-columns:
    [full-start]0px [gutter-start]var(--gutter) [popout-start]var(--popout)
    [content-start]var(--content) [content-end]var(--popout) [popout-end]var(
      --gutter
    )
    [gutter-end]0px [full-end];
  display: grid;
}
:where(.breakout) > * {
  grid-column: content-start/content-end;
}
.flow > * + * {
  margin-block-start: var(--flow-space, 1em);
}
.cluster {
  align-items: var(--align, center);
  display: flex;
  flex-wrap: wrap;
  gap: var(--row-gap, var(--gap, var(--space_m)))
    var(--column-gap, var(--gap, var(--space_m)));
  justify-content: var(--justify, flex-start);
}

blockquote {
  grid-column: popout;
  display: grid;
  grid-template-areas:
    "mark quote"
    "line quote";
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr;
  column-gap: 0.2em;
  padding-block: var(--space-xs);
  padding-inline-end: var(--space-l);
  color: var(--color-theme-offset);

  font-size: var(--step-1);
  line-height: 1.4;
}

blockquote > * {
  grid-area: quote;
  text-indent: 0.4em;
}

blockquote code {
  color: var(--color-theme-offset);
  background-color: var(--color-theme-muted);
}

blockquote::before {
  grid-area: mark;
  place-self: start;
  content: "â€œ";
  font-family: Georgia, serif;
  font-size: 3.4em;
  line-height: 1;
  height: 0.5em;
  color: var(--base_0b);
  transform: translateY(-0.025em);
}

blockquote::after {
  grid-area: line;
  place-self: stretch center;
  content: "";
  width: 0.2em;
  height: 100%;
  border-radius: 360px;
  background-color: var(--base_0b);
  transform: translateY(-0.1em);
}
